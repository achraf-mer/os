name: CI build action

on:
  pull_request:
    branches: ['main']
  push:
    branches:
      - gh-readonly-queue/main/**

jobs:
  build:
    name: Build changed OS packages (CI)
    runs-on: ubuntu-16-core

    permissions:
      packages: write
      contents: read

    steps:
      - name: Generate snapshot date
        id: snapshot-date
        run: |
          echo "date=$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "epoch=$(date -u +%s)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/checkout@v3

      - uses: chainguard-dev/actions/setup-melange@main

      - uses: google-github-actions/setup-gcloud@v0

      - name: 'Generate local signing key'
        run: |
          make MELANGE="melange" local-melange.rsa

      - name: 'Sync public package repository'
        run: |
          mkdir -p "${{ github.workspace }}/packages/x86_64"
          # This command will download everything it can find, exiting 1 if there's something missing.
          # We expect a few to be missing (they're how we know what to build), so ignore errors.
          gsutil -m cp $(make --no-print-directory list-versions PREFIX=gs://wolfi-production-registry-destination/os/x86_64 MELANGE="melange") packages/x86_64 || true
          gsutil cp gs://wolfi-production-registry-destination/os/x86_64/APKINDEX.tar.gz packages/x86_64
          find "${{ github.workspace }}/packages" -print -exec touch \{} \;

      - name: 'Build Wolfi'
        run: |
          make --debug BUILDWORLD=no MELANGE="sudo melange" MELANGE_DIR=/usr/share/melange MELANGE_EXTRA_OPTS="--create-build-log --keyring-append ${{ github.workspace }}/wolfi-signing.rsa.pub" REPO="${{ github.workspace }}/packages" -j1

      - name: Check for file
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check sonames
        id: soname
        if: steps.file_check.outputs.exists == 'true'
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: check so-name

      - name: Generate dependency svg
        id: svg
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: svg

      - uses: actions/upload-artifact@v3
        with:
          name: dag.svg
          path: dag.svg
